#!/usr/bin/env bash

# shameless stolen (and then adapted) from @lucasmazza [ in 2014-10-27 ]

echo "Setting up your environment..."


red() {
  echo -e "\033[31m $1\033[0m"
}

green() {
  echo -e "\033[0;32m$1\033[0m"
}

white() {
  echo -e "\033[0;37m$1\033[0m"
}

command_exists() {
  command -v "$1" &>/dev/null
}

test_dependency() {
  if command_exists "$1"; then
    green "  ✔  $2 is already installed."
  else
    exec >&2
    red "   ✖  You need to install $2.\c"
    if [[ -n "$3" ]]; then
      white "\n     $3\n"
    else
      echo " If you use Homebrew, you can run:"
      white "     brew install $2\n"
    fi
    return 1
  fi
}

check_ruby() {
  if ruby -v | grep -q "$1"; then
    green "  ✔  Ruby $1 is already installed."
  else
    red "  ✖  Ruby $1 is not installed. Please install it."
    return 1
  fi
}

copy_sample() {
  local config_file="${1%.*}"
  if [[ ! -f "$config_file" ]]; then
    sample=$(cat "$1")
    echo "${sample//"::USER::"/$USER}" >> "$config_file"
  fi
  echo "    $config_file"
}

install_bundler() {
  gem install bundler --conservative
}

# flags and params
run_migrations=true
while getopts ":s" arg; do
  case "$arg" in
    s)
      white "  -s passed. Will skip db creation/migration."
      run_migrations=false
      ;;
  esac
done

(
  set -e
  check_ruby "2.3.0"
  test_dependency "psql" "PostgreSQL"
  install_bundler
)

if (( $? != 0 )); then
  exit $?
fi

echo "Installing gems"
bundle check &> /dev/null || bundle install --quiet

echo "Copying sample files"
for sample in $(find config -type f -maxdepth 1 -name '*.sample'); do
  copy_sample "$sample"
done

# env vars...
if [[ ! -f .env ]]; then
  echo "Generating .env file"

  cp config/.env.template .env
fi

if [ "$run_migrations" == true ]; then
  echo "Creating databases"
  (
    set -e
    bundle exec rake db:create
    bundle exec rake db:migrate
    bundle exec rake db:test:prepare
  )
fi

white "You're ready to go!"
white "  It's a (really) good idea to run a bundle exec rspec now."

green "Done."
